{"version":3,"sources":["Components/Slider/sliderToggle.js","Components/header.js","Components/home.js","Components/apply.js","Components/about.js","Components/contact.js","Components/courses.js","Components/Slider/sideDrawer.js","Components/BackDrop/backDrop.js","App.js","serviceWorker.js","index.js"],"names":["NavWrapper","styled","ButtonWrapper","ButtonLine","ComapnyNameWrapper","SliderToggle","NavLink","props","onClick","click","NavLinkWrapper","Spacer","SliderToggleWrapper","AnchorTagWrapper","Header","this","drawerClickHandler","to","exact","target","href","React","Component","Home","Apply","About","Contact","SideDrawer","drawerClasses","show","className","BackDropWrapper","BackDrop","MainWrapper","routeItems","path","component","App","state","sideDrawerOpen","drawerToggleClickedHandler","setState","prevState","backdropClickHandler","backDrop","map","item","index","key","strict","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d460dc36.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavWrapper = styled('div')`\r\n        display: flex;\r\n        width:20px;\r\n        flex-direction:row;\r\n        justify-con\r\n        \r\n       \r\n  `;\r\n\r\nconst ButtonWrapper = styled('button')`\r\n        display:flex;\r\n        flex-direction:column;\r\n        justify-content:space-around;\r\n        height:30px;\r\n        width:35px;\r\n        background:transparent;\r\n        border:none;\r\n        cursor:pointer;\r\n\r\n        &:focus{\r\n            outline:none;\r\n        }\r\n    `;\r\n\r\nconst ButtonLine = styled('div')`\r\n       width:30px;\r\n       height:2px;\r\n       background:white;\r\n     \r\n    `;\r\n\r\nconst Spacer = styled('div')`\r\n    flex:1;\r\n\r\n`;\r\nconst ComapnyNameWrapper = styled('h4')`\r\n     color:white;\r\n     padding:4px 60px;\r\n\r\n`\r\nconst NavLinkWrapper= styled(NavLink)`\r\n    \r\n      display: flex;\r\n      flex-direction: column;\r\n      padding-bottom:10px;\r\n      padding-right:30px;\r\n      justify-content: center;\r\n      color:white;\r\n      text-decoration:none;\r\n      &:hover {\r\n        \r\n        color:black;\r\n        text-decoration:none;\r\n      }\r\n\r\n    \r\n`;\r\nconst AnchorTagWrapper=styled('a')`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: 0 10px;\r\njustify-content: center;\r\ncolor:white;\r\ntext-decoration:none;\r\nbackground-color:green;\r\n&:hover {\r\n  \r\n color:black;\r\n  text-decoration:none;\r\n}\r\n\r\n`;\r\n\r\nconst SliderToggle = props => (\r\n <NavWrapper>    \r\n    <ButtonWrapper onClick={props.click}>\r\n        <ButtonLine/>\r\n        <ButtonLine/>\r\n        <ButtonLine/>\r\n        <ButtonLine/>\r\n    </ButtonWrapper>\r\n    <ComapnyNameWrapper>DevikTech </ComapnyNameWrapper> \r\n </NavWrapper>\r\n);\r\n\r\nexport default SliderToggle;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport SliderToggle from './Slider/sliderToggle.js';\r\n\r\nconst NavWrapper = styled('div')`\r\n        display: flex;\r\n        flex-direction: row;\r\n        height:60px;\r\n        padding:12px 15px 12px 15px;\r\n        background: rgba(0, 0, 0, 0.9);\r\n            \r\n\r\n    `;\r\n\r\nconst NavLinkWrapper= styled(NavLink)`\r\n    \r\n      display: flex;\r\n      flex-direction: column;\r\n      padding: 0 10px;\r\n      justify-content: center;\r\n      color:white;\r\n      text-decoration:none;\r\n      &:hover {\r\n        \r\n        color:black;\r\n        text-decoration:none;\r\n      }\r\n\r\n      @media(max-width:768px) {\r\n          display:none;\r\n      }\r\n    \r\n`;\r\n\r\nconst Spacer = styled('div')`\r\n    flex:1\r\n\r\n`;\r\nconst SliderToggleWrapper=styled('div')`\r\n   @media(min-width:769px){\r\n       display:none;\r\n   }\r\n`;\r\n\r\nconst AnchorTagWrapper=styled('a')`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: 0 10px;\r\njustify-content: center;\r\ncolor:white;\r\ntext-decoration:none;\r\nbackground-color:green;\r\n&:hover {\r\n  \r\n  color:black;\r\n  text-decoration:none;\r\n}\r\n\r\n\r\n\r\n`;\r\nconst ComapnyNameWrapper = styled('h4')`\r\n     color:white;\r\n     padding:4px 300px;\r\n     @media(max-width:769px){\r\n        display:none;\r\n    }\r\n\r\n`\r\n\r\nclass Header extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n        <NavWrapper>\r\n            <SliderToggleWrapper>\r\n                <SliderToggle click={this.props.drawerClickHandler}/>\r\n            </SliderToggleWrapper>\r\n           <NavLinkWrapper to =\"/\" exact >Home</NavLinkWrapper>\r\n           <NavLinkWrapper to =\"/about\" exact >About</NavLinkWrapper>\r\n           <NavLinkWrapper to =\"/courses\" exact >Courses</NavLinkWrapper>\r\n           <NavLinkWrapper to =\"/contact\" exact >Contact</NavLinkWrapper>\r\n           <NavLinkWrapper to =\"/new\" exact >New</NavLinkWrapper>\r\n           <ComapnyNameWrapper>DevikTech </ComapnyNameWrapper> \r\n            <Spacer/>\r\n           \r\n       <AnchorTagWrapper target=\"_blank\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSfu0Iw5dSJNbymQetE7trMsoil-WWqUfylVgyg7GC0TYjdECw/viewform?vc=0&c=0&w=1\">Apply</AnchorTagWrapper> \r\n        </NavWrapper>\r\n        );\r\n\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nclass Home extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n          <p>Hi Home</p>\r\n       </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default Home;","import React from 'react';\r\n\r\n\r\nclass Apply extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n          <p>i am apply</p>\r\n       </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default Apply;","import React from 'react';\r\n\r\n\r\nclass About extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n          <p>Hi I am about</p>\r\n       </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default About;","import React from 'react';\r\n\r\n\r\nclass Contact extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n          <p>Hi am contact</p>\r\n       </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default Contact;","import React from 'react';\r\n\r\n\r\nclass Apply extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n          <p>i am courses</p>\r\n       </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default Apply;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport styled from \"styled-components\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './sideDrawer.css';\r\n\r\nconst NavWrapper = styled('div')`\r\n   height:100%;\r\n   background: rgba(0, 0, 0, 0.9);\r\n   box-shadow:2px 0px 5px rbga(0,0,0,0.5);\r\n   position:fixed;\r\n   top:0;\r\n   left:0;\r\n   padding:10px 10px;\r\n   width:30%;\r\n   max-width:400px;\r\n   z-index:200;\r\n   transform:translateX(-100%);\r\n   transition:transform 0.5s ease-out;\r\n    `;\r\n\r\n\r\nconst NavLinkWrapper= styled(NavLink)`\r\n   list-style:none;\r\n   display:flex;\r\n   flex-direction:column;\r\n   color:white;\r\n   text-decoration:none;\r\n   &:hover {     \r\n    color:black;\r\n    text-decoration:none;\r\n  }\r\n`;\r\n\r\nconst SideDrawer = props => {\r\n    let drawerClasses='side-drawer';\r\n    if(props.show) {\r\n        drawerClasses='side-drawer open';\r\n    }\r\n\r\n    return(\r\n     <NavWrapper className={drawerClasses}>        \r\n           <NavLinkWrapper to =\"/\" exact >Home</NavLinkWrapper>\r\n           <NavLinkWrapper to =\"/about\" exact >About</NavLinkWrapper>\r\n           <NavLinkWrapper to =\"/courses\" exact >Courses</NavLinkWrapper>\r\n           <NavLinkWrapper to =\"/contact\" exact >Contact</NavLinkWrapper>\r\n           <NavLinkWrapper to =\"/new\" exact >New</NavLinkWrapper>\r\n    </NavWrapper>\r\n    )\r\n\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst BackDropWrapper = styled('div')`\r\n    position:fixed;\r\n    width:100%;\r\n    height:100%;\r\n    top:0;\r\n    left:0;\r\n    background:rbga(0,0,0,0.3);\r\n    z-index:100;\r\n\r\n`;\r\n\r\nconst BackDrop = props =>(\r\n    <BackDropWrapper onClick={props.click}/>\r\n\r\n);\r\n\r\nexport default BackDrop;\r\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from \"styled-components\";\n\nimport Header from './Components/header.js';\nimport Home from './Components/home.js';\nimport Apply from './Components/apply.js';\nimport About from './Components/about.js';\nimport Courses from './Components/courses.js';\nimport Contact from './Components/contact.js';\nimport SideDrawer from './Components/Slider/sideDrawer.js';\nimport BackDrop from './Components/BackDrop/backDrop.js';\n\nconst MainWrapper =styled('div')`\n  height:100%;\n`\n \nconst routeItems = [\n  {\n    path: '/',\n    component: Home\n\n},\n{\n  path: '/about',\n  component:About\n},\n{\n  path: '/courses',\n  component:About\n},\n{\n  path:'/contact',\n  component:Contact\n},\n{\n  path: '/new',\n  component:About\n},\n  {\n      path: '/apply',\n      component: Apply\n  },\n];\n\n\nclass App extends React.Component{\n  state = {\n    sideDrawerOpen:false\n  };\n  drawerToggleClickedHandler=() => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen:!prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () =>{\n    this.setState({sideDrawerOpen:false});\n  }\n\n  render(){\n    let backDrop;\n\n    if(this.state.sideDrawerOpen) {\n      backDrop=<BackDrop click={this.backdropClickHandler}/>;\n    }\n    return(\n      <Router>\n        <MainWrapper>\n          <Header drawerClickHandler={this.drawerToggleClickedHandler}/>\n          <SideDrawer show={this.state.sideDrawerOpen}/>\n          {backDrop}\n          {routeItems.map((item,index) => (\n             <Route key={index} path={item.path} exact strict component={item.component}/>\n\n            ))\n           }\n        </MainWrapper>\n      </Router>\n      );\n  }\n}\n\nexport default App; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}